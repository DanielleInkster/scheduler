{"version":3,"sources":["Assets/Header.js","containers/Table.js","api.js","containers/DailySchedule.js","components/Intro.js","containers/DayPicker.js","components/Form.js","components/CreateAppt.js","components/EditAppt.js","components/Request.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","minHeight","paddingBottom","spacing","toolbar","alignItems","paddingTop","title","alignSelf","paddingRight","icon","color","Header","history","useHistory","classes","className","AppBar","position","height","Toolbar","Typography","variant","noWrap","IconButton","aria-label","onClick","push","fontSize","table","tablerow","backgroundColor","textAlign","tableitem","padding","TableSchedule","date","data","params","useParams","getTime","time","replace","Container","Table","schedule","header","Object","keys","map","key","index","toUpperCase","renderTableHeader","slot","status","TableRow","to","pathname","state","style","textDecoration","fontFamily","renderTableData","getAppts","fetch","then","res","json","getAppt","updateAppt","appt","method","headers","Accept","body","JSON","stringify","deleteAppt","DailySchedule","useState","items","setItems","useEffect","a","appts","fetchAppts","id","undefined","toDateString","length","newSchedule","item","createNewSchedule","Intro","src","alt","width","paper","whiteSpace","background","margin","borderRadius","whitepaper","Calendar","selectDate","dbDate","year","getFullYear","month","getMonth","day","getDate","concat","Grid","container","direction","justify","xs","Paper","selectedDays","onDayClick","modifiers","disabled","selected","dbDay","disabledDays","daysOfWeek","before","Date","Form","onSubmit","location","useLocation","useForm","defaultValues","name","project_name","project_description","email","register","submitHandler","handleSubmit","type","ref","value","htmlFor","required","placeholder","maxLength","line-height","Button","button","startIcon","CreateAppt","window","alert","EditAppt","setRequest","req","fetchAppt","marginBottom","Request","loadingError","component","setTimeout","App","exact","match","path","render","parentPath","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ca4d5149.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { AppBar } from '@material-ui/core';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { IconButton } from '@material-ui/core';\nimport 'fontsource-roboto';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    minHeight: 36,\n    paddingBottom: theme.spacing(2),\n  },\n  toolbar: {\n    minHeight: 50,\n    alignItems: 'flex-start',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  title: {\n    flexGrow: 1,\n    alignSelf: 'flex-end',\n    paddingBottom: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  icon: {\n    alignSelf: 'flex-end',\n    color: '#FFFFFF',\n  },\n}));\n\nexport default function Header() {\n  const history = useHistory();\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" height={'15%'}>\n        <Toolbar className={classes.toolbar}></Toolbar>\n        <Typography className={classes.title} variant=\"h4\" noWrap>\n          MyFakeBusiness\n        </Typography>\n        <IconButton\n          aria-label=\"home\"\n          className={classes.icon}\n          onClick={() => {\n            history.push('/');\n          }}\n        >\n          <HomeIcon fontSize=\"small\" />\n        </IconButton>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Container, Typography, Table, TableRow } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'fontsource-roboto';\nimport { fontFamily, color } from '@material-ui/system';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    flexGrow: 1,\n  },\n  tablerow: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: '#3f51b5',\n    },\n    textAlign: 'center',\n    flexGrow: 1,\n  },\n  tableitem: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n  },\n}));\n\nexport default function TableSchedule({ date, data }) {\n  let params = useParams();\n  const classes = useStyles();\n\n  function getTime(time) {\n    return time.replace(/[: ]+/g, '');\n  }\n\n  function renderTableHeader(schedule = data) {\n    if (date !== 'Please select a date for an appointment.') {\n      let header = Object.keys(schedule[0]);\n      return header.map((key, index) => {\n        return <th key={index}>{key.toUpperCase()}</th>;\n      });\n    }\n  }\n\n  function renderTableData(schedule = data) {\n    if (date !== 'Please select a date for an appointment.') {\n      return (data = schedule.map((slot, index) => {\n        const { time, status } = slot;\n        return (\n          <TableRow className={classes.tablerow} key={index}>\n            <td className={classes.tableitem}>{time}</td>\n            <td className={classes.tableitem}>{status}</td>\n            {status === 'available' && (\n              <td className={classes.tableitem}>\n                <Link\n                  to={{\n                    pathname: `${params.date}/CreateAppointment/${getTime(time)}`,\n                    state: {\n                      date: date,\n                      time: time,\n                    },\n                  }}\n                  style={{ textDecoration: 'none', color: 'white', fontFamily: 'sans-serif' }}\n                >\n                  Create Request\n                </Link>\n              </td>\n            )}\n            {status === 'pending' && (\n              <td>\n                <Link\n                  to={{\n                    pathname: `${params.date}/ViewAppointment/${getTime(time)}`,\n                    state: {\n                      date: date,\n                      time: time,\n                    },\n                  }}\n                  style={{ textDecoration: 'none', color: 'white', fontFamily: 'sans-serif' }}\n                >\n                  View Request\n                </Link>\n              </td>\n            )}\n            {status === 'unavailable' && <td></td>}\n          </TableRow>\n        );\n      }));\n    }\n  }\n\n  return (\n    <div className={classes.table}>\n      <Container>\n        <Typography variant=\"h7\">\n          <Table>\n            <tr>{renderTableHeader()}</tr>\n            <tbody>{renderTableData()}</tbody>\n          </Table>\n        </Typography>\n      </Container>\n    </div>\n  );\n}\n","export const getAppts = (date) => fetch(`http://localhost:4000/${date}`).then((res) => res.json());\n\nexport const getAppt = (date, time) =>\n  fetch(`http://localhost:4000/${date}/${time}`).then((res) => res.json());\n\nexport const createAppt = (appt) =>\n  fetch('http://localhost:4000/create', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(appt),\n  });\n\nexport const updateAppt = (appt, date, time) =>\n  fetch(`http://localhost:4000/${date}/${time}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(appt),\n  });\n\nexport const deleteAppt = (date, time) =>\n  fetch(`http://localhost:4000/delete/${date}/${time}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  });\n","import React, { useEffect, useState } from 'react';\nimport Table from './Table';\nimport { getAppts } from '../api';\nimport { useParams } from 'react-router-dom';\nimport { Typography } from '@material-ui/core';\nimport 'fontsource-roboto';\n\nexport default function DailySchedule({ date }) {\n  /* eslint-disable */\n  const [items, setItems] = useState([]);\n  const params = useParams()\n  /* eslint-enable */\n  const schedule = [\n    { time: '9:00 AM', status: 'unavailable' },\n    { time: '10:00 AM', status: 'available' },\n    { time: '11:00 AM', status: 'available' },\n    { time: '12:00 PM', status: 'unavailable' },\n    { time: '1:00 PM', status: 'available' },\n    { time: '2:00 PM', status: 'available' },\n    { time: '3:00 PM', status: 'available' },\n    { time: '4:00 PM', status: 'available' },\n    { time: '5:00 PM', status: 'unavailable' },\n  ];\n\n  useEffect(() => {\n    if (params.date !== null) {\n      const fetchAppts = async () => {\n        const appts = await getAppts(params.date);\n        setItems(appts);\n      };\n      fetchAppts();\n    }\n  }, [params.date]);\n\n  function createNewSchedule() {\n    const newSchedule = [...schedule];\n    newSchedule.map((slot) =>\n      items.map((item) => {\n        if (slot.time === item.time) {\n          slot.status = 'pending';\n        }\n        return newSchedule;\n      }),\n    );\n  }\n\n  return (\n    <div>\n      <Typography variant=\"h6\">\n        {date === null && (\n          <p id=\"date\">\n            <b> Please select a date. </b>\n          </p>\n        )}\n        {date === undefined && (\n          <p id=\"date\">\n            <b> Please select a date. </b>\n          </p>\n        )}\n        {date !== null && date !== undefined && (\n          <p id=\"date\">\n            <b>{date.toDateString()}</b>\n          </p>\n        )}\n      </Typography>\n      {items.length > 0 && date !== undefined && createNewSchedule()}\n      <center>\n        {date !== null && date !== undefined && (\n          <Table date={date.toDateString()} data={schedule} />\n        )}\n      </center>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport 'fontsource-roboto';\n\nexport default function Intro() {\n  return (\n    <div>\n      <Typography variant=\"h5\">\n        <h2>Welcome to MyFakeBusiness.com</h2>\n        <img\n          src=\"https://cdn.pixabay.com/photo/2016/04/15/18/05/computer-1331579_1280.png\"\n          alt=\"generic person icon\"\n          width=\"200vw\"\n          height=\"200vh\"\n        ></img>\n        <h4> We&apos;re a fake business and you can be too!</h4>\n        Want to learn more about creating your own fake business? We&apos;d love to help you out.\n        Request an appointment with one of our many fake experts to pitch us your best ideas.\n      </Typography>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../Assets/Header';\nimport DailySchedule from './DailySchedule';\nimport Intro from '../components/Intro';\nimport DayPicker from 'react-day-picker';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport 'react-day-picker/lib/style.css';\n\nconst styles = {\n  paper: {\n    padding: '1vw',\n    paddingBottom: '2vw',\n    textAlign: 'center',\n    color: '#FFFFFF',\n    whiteSpace: 'wrap',\n    background: '#6573c3',\n    margin: '1vh',\n    borderRadius: '5%',\n  },\n  whitepaper: {\n    padding: '1vw',\n    paddingBottom: '2vw',\n    textAlign: 'center',\n    background: '#FFFFFF',\n    whiteSpace: 'wrap',\n    margin: '1vh',\n    borderRadius: '5%',\n  },\n};\nconst useStyles = makeStyles(styles);\n\nexport default function Calendar() {\n  const [date, selectDate] = useState(null);\n  const history = useHistory();\n  const classes = useStyles();\n\n  function dbDate(data) {\n    if (data !== null) {\n      const year = data.getFullYear();\n      const month = data.getMonth() + 1;\n      const day = data.getDate();\n      const newDate = '';\n      return newDate.concat(year, month, day);\n    }\n  }\n\n  function handleDayClick(day, modifiers = {}) {\n    if (modifiers.disabled) {\n      return;\n    }\n    selectDate(modifiers.selected ? undefined : day);\n    const dbDay = dbDate(day);\n    history.push(`/${dbDay}`);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Header />\n      <Grid container spacing={2} direction=\"row\" justify=\"space-evenly\">\n        <Grid item xs={5}>\n          <Paper className={classes.paper}>\n            <Intro />\n          </Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.whitepaper}>\n            <DayPicker\n              selectedDays={date}\n              onDayClick={handleDayClick}\n              disabledDays={[{ daysOfWeek: [0, 6] }, { before: new Date() }]}\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={4}>\n          <Paper className={classes.paper}>\n            <DailySchedule date={date} />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Button, Typography } from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport 'react-router-modal/css/react-router-modal.css';\nimport 'fontsource-roboto';\n\nconst styles = {\n  paper: {\n    padding: '2vw',\n    textAlign: 'center',\n    color: '#FFFFFF',\n    whiteSpace: 'wrap',\n    background: '#6573c3',\n    borderRadius: '1%',\n  },\n};\nconst useStyles = makeStyles(styles);\n\nexport default function Form({ appt, onSubmit, date, time }) {\n  const params = useParams();\n  const location = useLocation();\n  const classes = useStyles();\n\n  const { register, handleSubmit } = useForm({\n    defaultValues: {\n      name: appt ? appt.name : '',\n      project_name: appt ? appt.project_name : '',\n      project_description: appt ? appt.project_description : '',\n      email: appt ? appt.email : '',\n    },\n  });\n\n  const submitHandler = handleSubmit((data) => {\n    onSubmit(data);\n  });\n\n  return (\n    <div>\n      <Container className={classes.paper}>\n        <form onSubmit={submitHandler}>\n          <input type=\"hidden\" name=\"date_id\" id=\"date_id\" ref={register} value={params.date} />\n          <input type=\"hidden\" name=\"time_id\" id=\"time_id\" ref={register} value={params.time} />\n          <input type=\"hidden\" name=\"date\" id=\"date\" ref={register} value={location.state.date} />\n          <input type=\"hidden\" name=\"time\" id=\"time\" ref={register} value={location.state.time} />\n          <h3>Request for Appointment</h3>\n          <p>Date: {appt ? appt.date : location.state.date}</p>\n          <p>Time: {appt ? appt.time : location.state.time}</p>\n          <label htmlFor=\"name\">Full name:</label>\n          <input\n            type=\"name\"\n            id=\"name\"\n            name=\"name\"\n            ref={register({ required: true })}\n            placeholder=\"Ex: 'Peter Parker'\"\n          />\n          <br />\n          <br />\n          <label htmlFor=\"project_name\">Project name:</label>\n          <input\n            type=\"text\"\n            id=\"project_name\"\n            name=\"project_name\"\n            ref={register({ required: true })}\n            placeholder=\"Ex: 'Best Project'\"\n          />\n          <br />\n          <br />\n          <label htmlFor=\"project_description\">Project description:</label>\n          <input\n            type=\"text\"\n            id=\"project_description\"\n            name=\"project_description\"\n            maxLength=\"250\"\n            line-height=\"140px\"\n            ref={register({ required: true })}\n            placeholder=\"Maximum of 250 characters\"\n          />\n          <br />\n          <br />\n          <label htmlFor=\"email\">Email Address:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            ref={register({ required: true })}\n            placeholder=\"Ex: 'peter.parker@marvel.com'\"\n          />\n          <br />\n          <br />\n          <Button\n            className={classes.button}\n            color=\"primary\"\n            variant=\"contained\"\n            startIcon={<ArrowUpwardIcon color=\"white\" />}\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </form>\n        <h5>To cancel, click outside of the pop-up window.</h5>\n      </Container>\n    </div>\n  );\n}\n","import React from 'react';\nimport Form from './Form';\nimport { createAppt } from '../api';\nimport { useHistory, useParams } from 'react-router-dom';\nimport 'fontsource-roboto';\n\nexport default function CreateAppt({ date, time }) {\n  const history = useHistory();\n  const params = useParams();\n\n  const onSubmit = async (data) => {\n    await createAppt(data);\n    window.alert(\n      `Appointment request created for ${data.date} at ${data.time}. A confirmation email has been sent to your inbox.`,\n    );\n    history.push(`/${params.date}/ViewAppointment/${params.time}`);\n  };\n  return (\n    <div>\n      <Form date={date} time={time} onSubmit={onSubmit} />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport Form from './Form';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { getAppt, updateAppt } from '../api';\nimport 'fontsource-roboto';\n\nexport default function EditAppt() {\n  let params = useParams();\n  const [appt, setRequest] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchAppt = async () => {\n      const req = await getAppt(params.date, params.time);\n      setRequest(req[0]);\n    };\n    fetchAppt();\n  });\n\n  const onSubmit = async (data) => {\n    await updateAppt(data, params.date, params.time);\n    window.alert('Request updated successfully!');\n    history.push(`/${params.date}/ViewAppointment/${params.time}`);\n  };\n\n  return <div>{appt !== '' && <Form appt={appt} onSubmit={onSubmit} />}</div>;\n}\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { getAppt, deleteAppt } from '../api';\nimport Header from '../Assets/Header';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Typography } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    flexGrow: 1,\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  whitepaper: {\n    padding: '1vw',\n    paddingBottom: '2vw',\n    textAlign: 'center',\n    background: '#FFFFFF',\n    whiteSpace: 'wrap',\n    margin: '1vh',\n    borderRadius: '5%',\n  },\n}));\n\nexport default function Request() {\n  const [appt, setRequest] = useState('');\n  const params = useParams();\n  const history = useHistory();\n  const classes = useStyles();\n\n  useEffect(() => {\n    const fetchAppt = async () => {\n      const req = await getAppt(params.date, params.time);\n      setRequest(req[0]);\n    };\n    fetchAppt();\n  });\n\n  async function removeAppt() {\n    await deleteAppt(params.date, params.time);\n    await window.alert('Request cancelled. No other action is required');\n    history.push('/');\n  }\n\n  function editAppt() {\n    history.push(`/${params.date}/EditAppointment/${params.time}`, { appt: appt });\n  }\n\n  function loadingError() {\n    return (\n      <div>\n        <p>Uh-oh! Something went wrong loading this page. Please try again.</p>\n        <button onClick={history.push('/')}>Go Home </button>\n      </div>\n    );\n  }\n\n  return appt ? (\n    <div>\n      <Header />\n      <Grid container direction=\"row\" justify=\"center\">\n        <Grid item>\n          <Typography variant=\"h5\" component=\"h2\">\n            <div className={classes.whitepaper}>\n              <h2>\n                <u>Request for Appointment</u>\n              </h2>\n              <h4>Date: {appt.date}</h4>\n              <h4>Time: {appt.time}</h4>\n              <h4>Name: {appt.name}</h4>\n              <p>Project Name: {appt.project_name}</p>\n              <p>Project Description: {appt.project_description}</p>\n              <p>Contact Email: {appt.email}</p>\n              <Button\n                className={classes.button}\n                color=\"primary\"\n                variant=\"contained\"\n                margin=\"2%\"\n                padding=\"2%\"\n                startIcon={<EditIcon />}\n                onClick={editAppt}\n              >\n                Edit Request\n              </Button>\n              <Button\n                className={classes.button}\n                color=\"primary\"\n                variant=\"contained\"\n                startIcon={<DeleteIcon />}\n                onClick={removeAppt}\n              >\n                Delete Request\n              </Button>\n            </div>\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  ) : (\n    <div>Loading... {setTimeout(() => loadingError, 3000)}</div>\n  );\n}\n","import React from 'react';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\nimport { ModalContainer, ModalRoute } from 'react-router-modal';\nimport DayPicker from './containers/DayPicker.js';\nimport CreateAppt from './components/CreateAppt.js';\nimport EditAppt from './components/EditAppt.js';\nimport Request from './components/Request.js';\nimport './App.css';\n\n/* eslint-disable */\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n      <Switch>\n        <Route exact match path=\"/\" render={() => { return <DayPicker />; }} />\n        <Route exact match path=\"/:date\" render={() => { return <DayPicker />; }} />\n        <ModalRoute component={CreateAppt} path='/:date/CreateAppointment/:time' parentPath='/'/> \n        <Route exact match path='/:date/ViewAppointment/:time'render={() => { return <Request />; }} />\n        <ModalRoute component={EditAppt} path='/:date/EditAppointment/:time'parentPath='/'/> \n        <Route path=\"*\" render={() => { return( <div>Page Not Found</div>)}} />\n      </Switch>\n      <ModalContainer/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}